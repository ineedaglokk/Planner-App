import Foundation
import SwiftData

// MARK: - Migration Manager

/// –ú–µ–Ω–µ–¥–∂–µ—Ä –º–∏–≥—Ä–∞—Ü–∏–π –¥–ª—è SwiftData –º–æ–¥–µ–ª–µ–π
final class MigrationManager {
    
    // MARK: - Current Schema Version
    
    /// –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è —Å—Ö–µ–º—ã –¥–∞–Ω–Ω—ã—Ö
    static let currentSchemaVersion = 1
    
    // MARK: - Migration Planning
    
    /// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏
    static func registerMigrations() {
        // –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥—É—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –º–∏–≥—Ä–∞—Ü–∏–∏
        // –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤—ã—Ö –≤–µ—Ä—Å–∏–π —Å—Ö–µ–º—ã –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö —Å—é–¥–∞
        
        #if DEBUG
        print("üîÑ –ú–∏–≥—Ä–∞—Ü–∏–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –≤–µ—Ä—Å–∏–∏ —Å—Ö–µ–º—ã \(currentSchemaVersion)")
        #endif
    }
    
    /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π
    static func checkMigrationNeeded() -> Bool {
        // –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–∏–≥—Ä–∞—Ü–∏–∏
        // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ –º–∏–≥—Ä–∞—Ü–∏—è
        return false
    }
    
    /// –í—ã–ø–æ–ª–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö
    static func performMigrationIfNeeded() async {
        guard checkMigrationNeeded() else {
            print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
            return
        }
        
        print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö...")
        
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π
        await performMigration()
        
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    }
    
    private static func performMigration() async {
        // –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏
        // –ë—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    }
}

// MARK: - Migration Plans (–ü–ª–∞–Ω—ã –±—É–¥—É—â–∏—Ö –º–∏–≥—Ä–∞—Ü–∏–π)

/*
 
 –ü–õ–ê–ù –ú–ò–ì–†–ê–¶–ò–ô –î–õ–Ø –ë–£–î–£–©–ò–• –í–ï–†–°–ò–ô:
 
 # –í–µ—Ä—Å–∏—è 1.1 (–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫)
 - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π –≤ UserPreferences
 - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ç–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
 - –ú–∏–≥—Ä–∞—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
 
 # –í–µ—Ä—Å–∏—è 1.2 (–£–ª—É—á—à–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏–≤—ã—á–µ–∫)
 - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –ø—Ä–∏–≤—ã—á–µ–∫
 - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è
 - –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏–≤—ã—á–µ–∫
 
 # –í–µ—Ä—Å–∏—è 1.3 (–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏)
 - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –¥–ª—è –∫–æ–º–∞–Ω–¥ –∏ –≥—Ä—É–ø–ø
 - –°–∏—Å—Ç–µ–º–∞ –¥—Ä—É–∑–µ–π –∏ –ø–æ–¥–ø–∏—Å–æ–∫
 - –û–±—â–∏–µ —Ü–µ–ª–∏ –∏ —á–µ–ª–ª–µ–Ω–¥–∂–∏
 
 # –í–µ—Ä—Å–∏—è 1.4 (–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞)
 - –ú–æ–¥–µ–ª–∏ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
 - –ö–∞—Å—Ç–æ–º–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
 - –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
 
 # –í–µ—Ä—Å–∏—è 2.0 (–ü–æ–ª–Ω–æ–µ –ø–µ—Ä–µ–æ—Å–º—ã—Å–ª–µ–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã)
 - –í–æ–∑–º–æ–∂–Ω—ã–µ –∫–∞—Ä–¥–∏–Ω–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ö–µ–º—ã
 - –ù–æ–≤—ã–µ –º–æ–¥–µ–ª–∏ –¥–ª—è AI-—Ñ—É–Ω–∫—Ü–∏–π
 - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏
 
*/

// MARK: - Migration Utilities

extension MigrationManager {
    
    /// –°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –º–∏–≥—Ä–∞—Ü–∏–µ–π
    static func createBackup() async {
        print("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –¥–∞–Ω–Ω—ã—Ö...")
        
        // –õ–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞
        // –ú–æ–∂–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ JSON –∏–ª–∏ –¥—Ä—É–≥–æ–π —Ñ–æ—Ä–º–∞—Ç
        
        print("‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞")
    }
    
    /// –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
    static func restoreFromBackup() async {
        print("üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...")
        
        // –õ–æ–≥–∏–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        
        print("‚úÖ –î–∞–Ω–Ω—ã–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    }
    
    /// –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏
    static func validateMigration() async -> Bool {
        print("üîç –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏...")
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É –º–æ–¥–µ–ª—è–º–∏
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        
        let isValid = true // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏
        
        if isValid {
            print("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
        } else {
            print("‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö")
        }
        
        return isValid
    }
}

// MARK: - Version-Specific Migrations

extension MigrationManager {
    
    // MARK: - Version 1.1 Migrations
    
    /// –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ –≤–µ—Ä—Å–∏—é 1.1
    private static func migrateToVersion1_1() async {
        print("üîÑ –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ –≤–µ—Ä—Å–∏—é 1.1...")
        
        // –ü—Ä–∏–º–µ—Ä –º–∏–≥—Ä–∞—Ü–∏–∏:
        // 1. –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –≤ UserPreferences
        // 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        // 3. –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
        
        /*
        do {
            let context = ModelContainer.shared.mainContext
            
            // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            let users = try context.fetch(FetchDescriptor<User>())
            
            for user in users {
                // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                user.preferences.newField = "defaultValue"
                user.markForSync()
            }
            
            try context.save()
            print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è 1.1 –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        } catch {
            print("‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ 1.1: \(error)")
        }
        */
    }
    
    // MARK: - Version 1.2 Migrations
    
    /// –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ –≤–µ—Ä—Å–∏—é 1.2
    private static func migrateToVersion1_2() async {
        print("üîÑ –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ –≤–µ—Ä—Å–∏—é 1.2...")
        
        // –ü—Ä–∏–º–µ—Ä –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–∏–≤—ã—á–µ–∫:
        // 1. –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏
        // 2. –°–æ–∑–¥–∞–µ–º –≥—Ä—É–ø–ø—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        // 3. –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏ –ø–æ –≥—Ä—É–ø–ø–∞–º
        
        /*
        do {
            let context = ModelContainer.shared.mainContext
            
            // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–∏–≤—ã—á–∫–∏
            let habits = try context.fetch(FetchDescriptor<Habit>())
            
            for habit in habits {
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥—Ä—É–ø–ø—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                habit.groupId = "default"
                habit.markForSync()
            }
            
            try context.save()
            print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è 1.2 –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        } catch {
            print("‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ 1.2: \(error)")
        }
        */
    }
    
    // MARK: - Future Migration Templates
    
    /// –®–∞–±–ª–æ–Ω –¥–ª—è –±—É–¥—É—â–∏—Ö –º–∏–≥—Ä–∞—Ü–∏–π
    private static func migrateToVersionX_X() async {
        print("üîÑ –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ –≤–µ—Ä—Å–∏—é X.X...")
        
        // –®–∞–±–ª–æ–Ω –º–∏–≥—Ä–∞—Ü–∏–∏:
        // 1. –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
        // 2. –í—ã–ø–æ–ª–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ö–µ–º—ã
        // 3. –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        // 4. –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        // 5. –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        
        /*
        do {
            await createBackup()
            
            let context = ModelContainer.shared.mainContext
            
            // –í–∞—à–∞ –ª–æ–≥–∏–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –∑–¥–µ—Å—å
            
            try context.save()
            
            let isValid = await validateMigration()
            if !isValid {
                await restoreFromBackup()
                throw MigrationError.validationFailed
            }
            
            print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è X.X –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        } catch {
            print("‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ X.X: \(error)")
            await restoreFromBackup()
        }
        */
    }
}

// MARK: - Migration Errors

enum MigrationError: Error, LocalizedError {
    case incompatibleVersion
    case dataCorrupted
    case validationFailed
    case backupFailed
    case unknownError(String)
    
    var errorDescription: String? {
        switch self {
        case .incompatibleVersion:
            return "–ù–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–∞—è –≤–µ—Ä—Å–∏—è —Å—Ö–µ–º—ã –¥–∞–Ω–Ω—ã—Ö"
        case .dataCorrupted:
            return "–î–∞–Ω–Ω—ã–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω—ã"
        case .validationFailed:
            return "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏"
        case .backupFailed:
            return "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é"
        case .unknownError(let message):
            return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: \(message)"
        }
    }
}

// MARK: - Migration Helpers

extension MigrationManager {
    
    /// –ü–æ–ª—É—á–∞–µ—Ç –≤–µ—Ä—Å–∏—é —Å—Ö–µ–º—ã –∏–∑ UserDefaults
    static func getCurrentSchemaVersion() -> Int {
        return UserDefaults.standard.integer(forKey: "SchemaVersion")
    }
    
    /// –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤–µ—Ä—Å–∏—é —Å—Ö–µ–º—ã –≤ UserDefaults
    static func saveSchemaVersion(_ version: Int) {
        UserDefaults.standard.set(version, forKey: "SchemaVersion")
    }
    
    /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–∞ –ª–∏ –º–∏–≥—Ä–∞—Ü–∏—è —Å —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏
    static func needsMigration(from oldVersion: Int, to newVersion: Int) -> Bool {
        return oldVersion < newVersion
    }
    
    /// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π
    static func getRequiredMigrations(from oldVersion: Int, to newVersion: Int) -> [Int] {
        guard needsMigration(from: oldVersion, to: newVersion) else { return [] }
        
        var migrations: [Int] = []
        for version in (oldVersion + 1)...newVersion {
            migrations.append(version)
        }
        
        return migrations
    }
}

// MARK: - Data Export/Import for Migrations

extension MigrationManager {
    
    /// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ JSON –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏
    static func exportDataToJSON() async -> Data? {
        print("üì§ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ JSON...")
        
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π –≤ JSON
        // –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π –∏ –æ—Ç–ª–∞–¥–∫–∏
        
        /*
        do {
            let context = ModelContainer.shared.mainContext
            
            var exportData: [String: Any] = [:]
            
            // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            let users = try context.fetch(FetchDescriptor<User>())
            exportData["users"] = users.map { user in
                [
                    "id": user.id.uuidString,
                    "name": user.name,
                    "email": user.email,
                    // ... –¥—Ä—É–≥–∏–µ –ø–æ–ª—è
                ]
            }
            
            // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–∏–≤—ã—á–∫–∏
            let habits = try context.fetch(FetchDescriptor<Habit>())
            exportData["habits"] = habits.map { habit in
                [
                    "id": habit.id.uuidString,
                    "name": habit.name,
                    "frequency": habit.frequency.rawValue,
                    // ... –¥—Ä—É–≥–∏–µ –ø–æ–ª—è
                ]
            }
            
            // ... —ç–∫—Å–ø–æ—Ä—Ç –¥—Ä—É–≥–∏—Ö –º–æ–¥–µ–ª–µ–π
            
            let jsonData = try JSONSerialization.data(withJSONObject: exportData, options: .prettyPrinted)
            print("‚úÖ –î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ JSON")
            return jsonData
        } catch {
            print("‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: \(error)")
            return nil
        }
        */
        
        return nil
    }
    
    /// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏
    static func importDataFromJSON(_ data: Data) async -> Bool {
        print("üì• –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON...")
        
        // –õ–æ–≥–∏–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON
        // –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –Ω–µ—É–¥–∞—á–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
        
        /*
        do {
            let json = try JSONSerialization.jsonObject(with: data, options: []) as? [String: Any]
            let context = ModelContainer.shared.mainContext
            
            // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            if let usersData = json?["users"] as? [[String: Any]] {
                for userData in usersData {
                    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ JSON
                    // let user = User(...)
                    // context.insert(user)
                }
            }
            
            // ... –∏–º–ø–æ—Ä—Ç –¥—Ä—É–≥–∏—Ö –º–æ–¥–µ–ª–µ–π
            
            try context.save()
            print("‚úÖ –î–∞–Ω–Ω—ã–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –∏–∑ JSON")
            return true
        } catch {
            print("‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: \(error)")
            return false
        }
        */
        
        return false
    }
} 